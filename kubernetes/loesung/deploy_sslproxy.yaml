# A headless service to create DNS records
apiVersion: v1
kind: Service
metadata:
  name: sslproxy
  labels:
    app: sslproxy
spec:
  ports:
  - port: 80
    name: http
  - port: 443
    name: https
  # *.webserver.default.svc.cluster.local
  clusterIP: None
  selector:
    app: sslproxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sslproxy-config
  namespace: default
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        server {
            # Not listening for port 80 traffic,
            # we expect all traffic to come from our load balancer
            # which will send over port 443
            listen 443 ssl default_server;
            listen 80;


            # Configuration taken from H5BP Nginx Server configs for SSL traffic
            ssl_certificate             /etc/ssl/example/example.crt;
            ssl_certificate_key         /etc/ssl/example/example.key;
            ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
            ssl_ciphers                 ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
            ssl_prefer_server_ciphers   on;
            ssl_session_cache           shared:SSL:10m; # a 1mb cache can hold about 4000 sessions, so we can hold 40000 sessions
            ssl_session_timeout         24h;
            keepalive_timeout           300; # up from 75 secs default

            server_name _;

            location / {
                proxy_pass              http://webserver.default.svc.cluster.local:80;
                proxy_read_timeout      90;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Forwarded-Proto $scheme;
            }
        }
    }

  example.key: |-
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpAIBAAKCAQEAwzlHp4JhIALabTOOfPAMU0g7VsQNJdJz1nni5+sGY1tS2LPb
    4Z/YAk/KW0lF1t+gaHrD2e3xZTN2x4EaxyIp4pYEn+EI97UcDJtMqtO7nMtqxnwU
    b2Df1+fQSx63o/7jUhWIHmNbg5NZdlRrtm0vDpIwT0cddXtfN0c+HyC1wK9+ZHCH
    ZeeLruuyj70HJUIu2Mz5edOOnciUQn1znso5+YYxWkCnmcz4nwl49CwQhsEYMuEn
    7KmgnMWGOrDMd+bhpMkgHKGRc6kcADtHnAS9Tz1ywDWppcKJ/DIW2TUc9Y20+0g5
    GfyL6+VrSlJrey6mOTTZaC1T/o1ZHdrK4BRaUwIDAQABAoIBAFSAI5rG3WFsurzP
    txovETavKjgZLhOz7z3jjiqSWTaCXe68ky0q8eW2QcGXiqpCK31tvf5Ddtw2FXCv
    Wjbde8G+64uEbUxC0TxHsDy03x00EyiMpo+7H8ilZ0xMpHJQrnZmKX/1w7PFANEu
    I11YDylAb7aw8nhaiVE0/hedIe6fhMBwtWPIJD4aw8KTUZKT5rpWaoCyJO76VuLO
    kCvd477HjoYhTy5M/ZL0qoWde0ohMIU/SosPKFUAXhdeQ1t3Ew/e6ZMxwHL+HO7i
    XU1t6h9I77qXZQXg9aZCgHhke/uBrcGn/IPuuJ1FWhjE2rcrjG5L3hfhHoup3T3v
    Ttfm/6kCgYEA+xbYdA91dR3lOT0MvmSIoj964+zInOf6+DJNggOW7S5EkwVXIZal
    juobJS2ogmLau5RQV09QedSMhqSId4PLQB5Zb87T1ZhV2B3SFODhve7yig70kCA4
    5FSkJQ9Unw9n5uhFC/hHFVGVP1DosrTu5ktdw0RSn/ZiSiDZw00ZGwUCgYEAxwq6
    EpfedsjFHoPDdccAapnn66q6TdBXitogRK687+zTMzscyg1VBjPL1L44Y/QxD7L0
    MgOABEw8ncx21s0wqZf2VM2Gg97gOHo15pxQ2v8NZbkaxEzWInQMxOtbxef5RC9Q
    1xeXFOchcHFOCf7NulXRj1eiqCYEjTLgMPDdj3cCgYEA0eskpcty0KpgxLzUlayp
    SrQ1wq5ofj235Z7wi90CZmLDNANH+C3hVh1E+o00j2WkJyT1EjmeN2zK25pc+UZ3
    O7Dj5wUMt0t3oYo04/2q3UcTAPdF4eT+i250GQO7JIwVuse/SiWVEC63z0qOcTGx
    dVnXFvRc+51aSU0zogMoFR0CgYA5qxX2RSIjcFAMY0jCWwH34NedJD4ORYrXpBMt
    UyNSsF8QvNO+htZXkbJA1UwpSZrdXY/63aC9ngkB/zd/TLwIpwqrz1Bl7LEyK9Zq
    FmgmyzbqfhMPROPV36HDfB1+3ZMO+laFu0P+vmil124w3y5kCnFJAq8R4NH4xwDF
    rUPESQKBgQCv/dASPQkLQckgaY0PI1ZkFD3sxIBzHTaC3hc/rwJ0JgYYwVZwbEQH
    3dWfNl4Uk9cEjBYHtzJCoDN2X9OrcvrkbcHfnOsIu/cBWTciRetxRw1Ze7dgvlLY
    5Wd5nFAojPRlMgHEO/tcgsVHntnnuohBAWF3cBO7Ins3SfRCuUNoWQ==
    -----END RSA PRIVATE KEY-----

  example.crt: |
    -----BEGIN CERTIFICATE-----
    MIID2DCCAsACCQDjDO+WsHH36jANBgkqhkiG9w0BAQsFADCBrTELMAkGA1UEBhMC
    REUxDDAKBgNVBAgMA05SVzENMAsGA1UEBwwEQm9ubjEUMBIGA1UECgwLSVRFTk9T
    IEdtYkgxGDAWBgNVBAsMD0RvY2tlci1TY2h1bHVuZzEiMCAGA1UEAwwZZG9ja2Vy
    LXdlYnNlcnZlci5sb2NhbGRldjEtMCsGCSqGSIb3DQEJARYeaW5mb0Bkb2NrZXIt
    d2Vic2VydmVyLmxvY2FsZGV2MB4XDTE3MDUzMDE3MzU1NFoXDTE4MDUzMDE3MzU1
    NFowga0xCzAJBgNVBAYTAkRFMQwwCgYDVQQIDANOUlcxDTALBgNVBAcMBEJvbm4x
    FDASBgNVBAoMC0lURU5PUyBHbWJIMRgwFgYDVQQLDA9Eb2NrZXItU2NodWx1bmcx
    IjAgBgNVBAMMGWRvY2tlci13ZWJzZXJ2ZXIubG9jYWxkZXYxLTArBgkqhkiG9w0B
    CQEWHmluZm9AZG9ja2VyLXdlYnNlcnZlci5sb2NhbGRldjCCASIwDQYJKoZIhvcN
    AQEBBQADggEPADCCAQoCggEBAMM5R6eCYSAC2m0zjnzwDFNIO1bEDSXSc9Z54ufr
    BmNbUtiz2+Gf2AJPyltJRdbfoGh6w9nt8WUzdseBGsciKeKWBJ/hCPe1HAybTKrT
    u5zLasZ8FG9g39fn0Eset6P+41IViB5jW4OTWXZUa7ZtLw6SME9HHXV7XzdHPh8g
    tcCvfmRwh2Xni67rso+9ByVCLtjM+XnTjp3IlEJ9c57KOfmGMVpAp5nM+J8JePQs
    EIbBGDLhJ+ypoJzFhjqwzHfm4aTJIByhkXOpHAA7R5wEvU89csA1qaXCifwyFtk1
    HPWNtPtIORn8i+vla0pSa3supjk02WgtU/6NWR3ayuAUWlMCAwEAATANBgkqhkiG
    9w0BAQsFAAOCAQEAVe9bzV05Tln3A8Fo8X7hE+zVlXA5JeXCidzkxB3l2Q6ASywE
    KiumGr/3i8ghCH0YivcGAFtsoX5WKUfBCDNh27xlwl0mOZqNE4GXefcaoRVi/G9+
    NP3DYREwz7xzdnm16pLK3MCCax/S66Cgikbz4dwPoamBmF5lGvGxvniEXCpUJEDz
    LNps/OQ6yaP94i/9hK3GnbDk5vYPqb5/5kVQT9su/VyeAQ+M0tpcHHUewvWpTUCS
    a1aviEQEDhsQJtvBRR/QskopkWHAZxgQzTpnJUCqCBKz652ryhPrXEQS7cpP8kzZ
    mamKjg83mjDdMvOgaFgIcuecpUhJpGNEjCPL7w==
    -----END CERTIFICATE-----


---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: sslproxy
spec:
  serviceName: "sslproxy"
  replicas: 2
  template:
    metadata:
      labels:
        app: sslproxy
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: sslproxy
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: config-volume
          mountPath: /etc/ssl/example/example.key
          subPath: example.key
        - name: config-volume
          mountPath: /etc/ssl/example/example.crt
          subPath: example.crt
      volumes:
        - name: config-volume
          configMap:
            # Provide the name of the ConfigMap containing the files you want
            # to add to the container
            name: sslproxy-config